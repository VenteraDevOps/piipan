@using Piipan.Components.Alerts
@using Piipan.Components.Enums
@using System.Linq.Expressions
@using Piipan.Match.Api.Models.Resolution
@using Piipan.QueryTool.Client.Models
@using static Piipan.Components.Tag.TagConstants
@inherits BaseComponentTest<MatchDetail>

@code {
    /// <summary>
    /// Set the default initial values for this test component
    /// </summary>
    public MatchDetailTests() : base()
    {
        InitialValues = new MatchDetail()
        {
            Match = new ParameterBase<MatchResApiResponse>
            {
                Data = new MatchResApiResponse
                {
                    Data = new MatchResRecord
                    {
                        Status = "open",
                        MatchId = "M123456"
                    }
                }
            }
        };
    }

    /// <summary>
    /// Create a matches list component
    /// </summary>
    protected override void CreateTestComponent()
    {
        Component = Render<MatchDetail>(
            @<MatchDetail Match="InitialValues.Match">
            </MatchDetail>
        );
    }

    #region Tests

    /// <summary>
    /// Verify the default markup of the match detail page
    /// </summary>
    [Fact]
    public void Match_Detail_Should_Exist_And_Have_Correct_Markup()
    {
        // Arrange
        CreateTestComponent();

        // Assert
        Component!.MarkupMatches(
            @<div class="grid-container">
                <div class="grid-row">
                    <h1>
                        <span class="@TagClass @TagBorderRoundClass @TagThemeGreenClass">open</span>
                        <span>Match ID: M123456</span>
                    </h1>
                </div>
                <div diff:ignore></div>
        </div>
    );
    }

    /// <summary>
    /// Verify the match detail status tag is green when the status is open
    /// </summary>
    [Fact]
    public void Match_Detail_Status_Tag_Should_Be_Green_When_Open()
    {
        // Arrange
        CreateTestComponent();
        var tag = Component!.Find($".{TagClass}");

        // Assert
        Assert.True(tag.ClassList.Contains(TagThemeGreenClass));
    }

    /// <summary>
    /// Verify the match detail status tag is gray when the status is closed
    /// </summary>
    [Fact]
    public void Match_Detail_Status_Tag_Should_Be_Gray_When_Closed()
    {
        // Arrange
        InitialValues.Match.Data.Data.Status = "closed";
        CreateTestComponent();
        var tag = Component!.Find($".{TagClass}");

        // Assert
        Assert.True(tag.ClassList.Contains(TagThemeGrayClass));
    }

    #endregion
}