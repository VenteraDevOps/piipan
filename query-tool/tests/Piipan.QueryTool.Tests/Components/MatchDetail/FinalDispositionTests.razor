@using Piipan.Match.Api.Models.Resolution
@using Piipan.QueryTool.Client.Components.MatchDetail
@inherits BaseComponentTest<ResolutionFields>

@code {
    /// <summary>
    /// Set the default initial values for this test component
    /// </summary>
    public FinalDispositionTests() : base()
    {

    }


    /// <summary>
    /// Create a StateParticipantInformation component
    /// </summary>
    protected override void CreateTestComponent()
    {
        JSInterop.SetupVoid("piipan.utilities.registerFormValidation", _ => true).SetVoidResult();
            JSInterop.Setup<int>("piipan.utilities.getCursorPosition", _ => true).SetResult(1);
            JSInterop.SetupVoid("piipan.utilities.setCursorPosition", _ => true).SetVoidResult();
            JSInterop.SetupVoid("piipan.utilities.scrollToElement", _ => true).SetVoidResult();
        Disposition disp = new Disposition
            {
                InitialActionAt = null,
                InitialActionTaken = "",
                InvalidMatch = false,
                InvalidMatchReason = "",
                OtherReasoningForInvalidMatch = "",
                FinalDisposition = "",
                FinalDispositionDate = null,
                VulnerableIndividual = null,
                State = "EA"
            };
        Component = Render<ResolutionFields>(
    @<ResolutionFields State="Echo Bravo" InitiatingState=true DispositionData="@disp">
    </ResolutionFields>
        );
    }

    /// <summary>
    /// Create a StateParticipantInformation component
    /// </summary>
    protected void CreateTestComponentMatching()
    {
        JSInterop.SetupVoid("piipan.utilities.registerFormValidation", _ => true).SetVoidResult();
            JSInterop.Setup<int>("piipan.utilities.getCursorPosition", _ => true).SetResult(1);
            JSInterop.SetupVoid("piipan.utilities.setCursorPosition", _ => true).SetVoidResult();
            JSInterop.SetupVoid("piipan.utilities.scrollToElement", _ => true).SetVoidResult();
        Disposition disp = new Disposition
            {
                InitialActionAt = null,
                InitialActionTaken = "",
                InvalidMatch = false,
                InvalidMatchReason = "",
                OtherReasoningForInvalidMatch = "",
                FinalDisposition = "",
                FinalDispositionDate = null,
                VulnerableIndividual = null,
                State = "EA"
            };
        Component = Render<ResolutionFields>(
    @<ResolutionFields State="Echo Bravo" InitiatingState=true DispositionData="@disp">
    </ResolutionFields>
        );
    }

    #region Tests

    /// <summary>
    /// Verify the default markup of the state contact information
    /// </summary>
    [Fact]
    public void Final_Disposition_status_markup_Initiating()
    {
        // Arrange
        CreateTestComponent();

        // Assert
        Component!.MarkupMatches(
            @<div >
      <h3 >Update information about this match for Echo Bravo</h3>
      <p class="infoSavedText" >After the information is saved, it will appear in the
        <b >match information</b>
        panel.</p>
      <div class="usa-form ">
        <form id="snap-participants-query-form" method="post" novalidate="" >
          <fieldset class="usa-fieldset">
            <div diff:ignore> //Ignoring Vulnerable Invalid Component
            </div>
            <div diff:ignore> //Ignoring Initial Action Component
            </div>
            <div class="FinalDispositionDiv" >
              <h5 class="FinalDispositionHeader" >Final Disposition</h5>
              <p class="FinalDispositionText" >Final Disposition information can be added once the initial Action has been selected.</p>
              <div class="usa-form-group ">
                <label class="usa-label" for="DispositionData_FinalDisposition">Final Disposition Taken</label>
                <select class="usa-select usa-input "  id="DispositionData_FinalDisposition" name="DispositionData.FinalDisposition" style="" value=""  >
                  <option value="">- Select -</option>
                  <option value="Benefits Approved">Benefits Approved</option>
                  <option value="Benefits Denied">Benefits Denied</option>
                </select>
              </div>
            </div>
            <button class="usa-button " >Save Changes</button>
          </fieldset>
        </form>
      </div>
    </div>
        );
    }

    /// <summary>
    /// Verify the default markup of the state contact information
    /// </summary>
    [Fact]
    public void Final_Disposition_status_markup_Matching()
    {
        // Arrange
        CreateTestComponentMatching();

        // Assert
        Component!.MarkupMatches(
            @<div >
      <h3 >Update information about this match for Echo Bravo</h3>
      <p class="infoSavedText" >After the information is saved, it will appear in the
        <b >match information</b>
        panel.</p>
      <div class="usa-form ">
        <form id="snap-participants-query-form" method="post" novalidate="" >
          <fieldset class="usa-fieldset">
            <div diff:ignore> //Ignoring Vulnerable Invalid Component
            </div>
            <div diff:ignore> //Ignoring Initial Action Component
            </div>
            <div class="FinalDispositionDiv" >
              <h5 class="FinalDispositionHeader" >Final Disposition</h5>
              <p class="FinalDispositionText" >Final Disposition information can be added once the initial Action has been selected.</p>
              <div class="usa-form-group ">
                <label class="usa-label" for="DispositionData_FinalDisposition">Final Disposition Taken</label>
                <select class="usa-select usa-input "  id="DispositionData_FinalDisposition" name="DispositionData.FinalDisposition" style="" value=""  >
                  <option value="">- Select -</option>
                  <option value="Benefits Approved">Benefits Approved</option>
                  <option value="Benefits Denied">Benefits Denied</option>
                </select>
              </div>
            </div>
            <button class="usa-button " >Save Changes</button>
          </fieldset>
        </form>
      </div>
    </div>
        );
    }
    #endregion
}
