@using Piipan.Match.Api.Models.Resolution
@using Piipan.QueryTool.Client.Components.MatchDetail
@using Piipan.QueryTool.Client.Models
@inherits BaseComponentTest<ResolutionFields>

@code {
    /// <summary>
    /// Set the default initial values for this test component
    /// </summary>
    public FinalDispositionTests() : base()
    {
        InitialValues = new ResolutionFields
        {
            DispositionData = new DispositionModel
            {
                InitialActionAt = null,
                InitialActionTaken = "",
                InvalidMatch = false,
                InvalidMatchReason = "",
                OtherReasoningForInvalidMatch = "",
                FinalDisposition = "",
                FinalDispositionDate = null,
                VulnerableIndividual = null,
                State = "EA"
            },
            State = "Echo Bravo",
            InitiatingState = true
        };
    }


    /// <summary>
    /// Create a StateParticipantInformation component
    /// </summary>
    protected override void CreateTestComponent()
    {
        JSInterop.SetupVoid("piipan.utilities.registerFormValidation", _ => true).SetVoidResult();
            JSInterop.Setup<int>("piipan.utilities.getCursorPosition", _ => true).SetResult(1);
            JSInterop.SetupVoid("piipan.utilities.setCursorPosition", _ => true).SetVoidResult();
            JSInterop.SetupVoid("piipan.utilities.scrollToElement", _ => true).SetVoidResult();
        
        Component = Render<ResolutionFields>(
            @<Piipan.Components.Forms.UsaForm Model="InitialValues.DispositionData">
                <ResolutionFields State="@InitialValues.State" InitiatingState="InitialValues.InitiatingState" DispositionData="@InitialValues.DispositionData">
                </ResolutionFields>
            </Piipan.Components.Forms.UsaForm>
        );
    }

    #region Tests

    /// <summary>
    /// Verify the default markup of the state contact information
    /// </summary>
    [Fact]
    public void Final_Disposition_status_markup_Initiating()
    {
        // Arrange
        CreateTestComponent();

        // Assert
        Component!.MarkupMatches(
            @<text><h3 >Update information about this match for Echo Bravo</h3>
      <p class="infoSavedText" >After the information is saved, it will appear in the
        <b >match information</b>
        panel.</p>
          <input type="hidden" name="__RequestVerificationToken" >
            <div diff:ignore> //Ignoring Vulnerable Invalid Component
            </div>
            <div diff:ignore> //Ignoring Initial Action Component
            </div>
            <div class="FinalDispositionDiv" >
              <h5 class="FinalDispositionHeader" >Final Disposition</h5>
              <p class="FinalDispositionText" >Final Disposition information can be added once the initial Action has been selected.</p>
              <div class="ResolutionFieldsDropdownWidth" >
                  <div class="usa-form-group ">
                    <label class="usa-label" for="DispositionData_FinalDisposition">Final Disposition Taken</label>
                    <select class="usa-select usa-input "  id="DispositionData_FinalDisposition" name="DispositionData.FinalDisposition" style="" value=""  >
                      <option value="">- Select -</option>
                      <option value="Benefits Approved">Benefits Approved</option>
                      <option value="Benefits Denied">Benefits Denied</option>
                    </select>
                  </div>
              </div>
            </div></text>
        );
    }

    /// <summary>
    /// Verify the default markup of the state contact information
    /// </summary>
    [Fact]
    public void Final_Disposition_status_markup_Matching()
    {
        // Arrange
        InitialValues.InitiatingState = false;
        CreateTestComponent();

        // Assert
        Component!.MarkupMatches(
            @<text>
      <h3 >Update information about this match for Echo Bravo</h3>
      <p class="infoSavedText" >After the information is saved, it will appear in the
        <b >match information</b>
        panel.</p>
        <input type="hidden" name="__RequestVerificationToken" >
        <div diff:ignore> //Ignoring Vulnerable Invalid Component
        </div>
        <div diff:ignore> //Ignoring Initial Action Component
        </div>
        <div class="FinalDispositionDiv" >
            <h5 class="FinalDispositionHeader" >Final Disposition</h5>
            <p class="FinalDispositionText" >Final Disposition information can be added once the initial Action has been selected.</p>
            <div class="ResolutionFieldsDropdownWidth" >
                <div class="usa-form-group ">
                <label class="usa-label" for="DispositionData_FinalDisposition">Final Disposition Taken</label>
                <select class="usa-select usa-input "  id="DispositionData_FinalDisposition" name="DispositionData.FinalDisposition" style="" value=""  >
                    <option value="">- Select -</option>
                    <option value="Benefits Terminated">Benefits Terminated</option>
                    <option value="Benefits Unchanged">Benefits Unchanged</option>
                </select>
                </div>
            </div>
        </div>
    </text>
        );
    }
    #endregion
}
