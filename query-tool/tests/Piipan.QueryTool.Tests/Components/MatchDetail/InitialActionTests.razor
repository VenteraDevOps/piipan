@using Piipan.Match.Api.Models.Resolution
@using Piipan.QueryTool.Client.Components.MatchDetail
@inherits BaseComponentTest<ResolutionFields>

@code {


        /// <summary>
        /// Create a StateParticipantInformation component
        /// </summary>
    protected override void CreateTestComponent()
    {
        JSInterop.SetupVoid("piipan.utilities.registerFormValidation", _ => true).SetVoidResult();
        JSInterop.Setup<int>("piipan.utilities.getCursorPosition", _ => true).SetResult(1);
        JSInterop.SetupVoid("piipan.utilities.setCursorPosition", _ => true).SetVoidResult();
        JSInterop.SetupVoid("piipan.utilities.scrollToElement", _ => true).SetVoidResult();
        Disposition disp = new Disposition
            {
                InitialActionAt = null,
                InitialActionTaken = "",
                InvalidMatch = false,
                InvalidMatchReason = "",
                OtherReasoningForInvalidMatch = "",
                FinalDisposition = "",
                FinalDispositionDate = null,
                VulnerableIndividual = null,
                State = "EA"
            };
        Component = Render<ResolutionFields>(
        @<ResolutionFields State="Echo Bravo" InitiatingState=true DispositionData="@disp">
        </ResolutionFields>
    );
    }

    /// <summary>
    /// Create a StateParticipantInformation component
    /// </summary>
    protected void CreateTestComponentMatching()
    {
        JSInterop.SetupVoid("piipan.utilities.registerFormValidation", _ => true).SetVoidResult();
        JSInterop.Setup<int>("piipan.utilities.getCursorPosition", _ => true).SetResult(1);
        JSInterop.SetupVoid("piipan.utilities.setCursorPosition", _ => true).SetVoidResult();
        JSInterop.SetupVoid("piipan.utilities.scrollToElement", _ => true).SetVoidResult();
        Disposition disp = new Disposition
            {
                InitialActionAt = null,
                InitialActionTaken = "",
                InvalidMatch = false,
                InvalidMatchReason = "",
                OtherReasoningForInvalidMatch = "",
                FinalDisposition = "",
                FinalDispositionDate = null,
                VulnerableIndividual = null,
                State = "EA"
            };
        Component = Render<ResolutionFields>(
    @<ResolutionFields State="Echo Alpha" InitiatingState=false DispositionData="@disp">
    </ResolutionFields>
        );
    }

    #region Tests

    /// <summary>
    /// Verify the default markup of the state contact information
    /// </summary>
    [Fact]
    public void Initial_Action_status_markup_Initiating()
    {
        // Arrange
        CreateTestComponent();

        // Assert
        Component!.MarkupMatches(
            @<div >
      <h3 >Update information about this match for Echo Bravo</h3>
      <p class="infoSavedText" >After the information is saved, it will appear in the
        <b >match information</b>
        panel.</p>
      <div class="usa-form ">
        <form id="snap-participants-query-form" method="post" novalidate="" >
          <fieldset class="usa-fieldset">
            <div diff:ignore> //Ignoring Vulnerable Invalid Component
            </div>
            <div >
          <h5 class="InitalActionHeader" >Initial Action</h5>
          <div class="usa-form-group ">
            <label class="usa-label" for="DispositionData_InitialActionTaken">Initial Action Taken</label>
            <select class="usa-select usa-input "  id="DispositionData_InitialActionTaken" name="DispositionData.InitialActionTaken" style="" value=""  >
              <option value="">- Select -</option>
              <option value="Notice Sent">Notice Sent</option>
              <option value="Client Provided Required Verification">Client Provided Required Verification</option>
            </select>
          </div>
          <div class="usa-form-group ">
            <label class="usa-label" for="DispositionData_InitialActionAt">Inital Action Date</label>
            <input  id="DispositionData_InitialActionAt" name="DispositionData.InitialActionAt" style="width: 180px;" type="date" class="usa-input  valid" value=""  >
          </div>
        </div>
            <div diff:ignore> //Ignoring Final Disposition Component
            </div>
            <button class="usa-button " >Save Changes</button>
          </fieldset>
        </form>
      </div>
    </div>
        );
    }

    /// <summary>
    /// Verify the default markup of the state contact information
    /// </summary>
    [Fact]
    public void Initial_Action_status_markup_Matching()
    {
        // Arrange
        CreateTestComponentMatching();

        // Assert
        Component!.MarkupMatches(
            @<div >
      <h3 >Update information about this match for Echo Alpha</h3>
      <p class="infoSavedText" >After the information is saved, it will appear in the
        <b >match information</b>
        panel.</p>
      <div class="usa-form ">
        <form id="snap-participants-query-form" method="post" novalidate="" >
          <fieldset class="usa-fieldset">
            <div diff:ignore> //Ignoring Vulnerable Invalid Component
            </div>
            <div >
              <h5 class="InitalActionHeader" >Initial Action</h5>
              <div class="usa-form-group ">
                <label class="usa-label" for="DispositionData_InitialActionTaken">Initial Action Taken</label>
                <select class="usa-select usa-input "  id="DispositionData_InitialActionTaken" name="DispositionData.InitialActionTaken" style="" value=""  >
                  <option value="">- Select -</option>
                  <option value="Notice Sent">Notice Sent</option>
                  <option value="Client Verified Moved Out of State">Client Verified Moved Out of State</option>
                </select>
              </div>
              <div class="usa-form-group ">
                <label class="usa-label" for="DispositionData_InitialActionAt">Inital Action Date</label>
                <input  id="DispositionData_InitialActionAt" name="DispositionData.InitialActionAt" style="width: 180px;" type="date" class="usa-input  valid" value=""  >
              </div>
            </div>
            <div diff:ignore> //Ignoring Final Disposition Component
            </div>
            <button class="usa-button " >Save Changes</button>
          </fieldset>
        </form>
      </div>
    </div>
        );
    }
    #endregion
}
