@using Piipan.Components.Modals
@using Piipan.Components.Routing
@using Piipan.Match.Api.Models
@using Piipan.Match.Api.Models.Resolution
@using Piipan.QueryTool.Client.Helpers
@using Piipan.QueryTool.Client.Modals
@inject IJSRuntime JSRuntime
@inject IModalManager ModalManager
@inject PiipanNavigationManager NavigationManager

@code {
    [Parameter] public List<MatchResApiResponse> QueryResult { get; set; }
    [Parameter] public string LoggedInUsersState { get; set; }
    [Parameter] public bool IsNationalOffice { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("piipan.utilities.scrollToElement", "match-results-area");
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private void ResultClicked(MatchResApiResponse record)
    {
        void Navigate()
        {
            NavigationManager.NavigateTo($"/match/{record.Data.MatchId}", true);
        }
        if (record.Data.Dispositions.Any(n => n.VulnerableIndividual == true))
        {
            ModalManager.Show<VulnerableIndividualModal>(
                new VulnerableIndividualModal()
                {
                    ContinueCallback = Navigate
                },
                new ModalInfo
                {
                    ForceAction = true
                }
            );
        }
        else
        {
            Navigate();
        }
    }

    private string MatchingStateTableResults(MatchResApiResponse result)
    {
        if (IsNationalOffice)
        {
            return string.Join(", ", result.Data.States.OrderBy(state => state).Select(state => StateHelper.GetStateName(state)));
        }
        else
        {
            foreach(string state in result.Data.States)
            {
                if (state != LoggedInUsersState)
                {
                    return state;
                }
            }
        }
        return "";
    }

    private string VulnerableIndivudualTableResults(MatchResApiResponse result)
    {
        string VulnerableIndividualTableResults = "";
        if (IsNationalOffice)
        {
            result.Data.Dispositions.OrderBy(state => state);
            foreach (var disposition in result.Data.Dispositions)
            {
                string individualStateVulnerableStatus = disposition.VulnerableIndividual switch
                {

                    true => "Yes,",
                    false => "No,",
                    null => "-,"
                };
                VulnerableIndividualTableResults = VulnerableIndividualTableResults + individualStateVulnerableStatus;
            }
        }
        else
        {
            for (int i = 0; i < 2; i++)
            {
                if (result.Data.States[i] != LoggedInUsersState)
                {
                    VulnerableIndividualTableResults = result.Data.Dispositions[i].VulnerableIndividual switch
                    {

                        true => "Yes",
                        false => "No",
                        null => "-"
                    };
                }
            }
        }
        VulnerableIndividualTableResults  = VulnerableIndividualTableResults.Remove(VulnerableIndividualTableResults.Length - 1);
        return VulnerableIndividualTableResults;
    }

}

<section class="border-top-1px border-base-light margin-top-6" id="match-results-area">
    <h2>Find a Match Record Search Results</h2>
    <p>This participant was found in another state. Select the Match ID for more information.</p>
    <table class="usa-table">
        <thead>
            <tr>
                <th scope="col">Match ID</th>
                <th scope="col">Matching State</th>
                <th scope="col">Vulnerable Individual</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var result in QueryResult)
        {
            <tr>
                <td><a href="/match/@result.Data.MatchId" @onclick="@(() => ResultClicked(result))" @onclick:preventDefault>@result.Data.MatchId</a></td>
                <td>@MatchingStateTableResults(result)</td>
                <td>@VulnerableIndivudualTableResults(result)</td>
            </tr>
        }
        </tbody>
    </table>
</section>
