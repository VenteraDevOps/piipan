@using Microsoft.AspNetCore.Components.Forms
@using Piipan.Components.Forms
@using Piipan.Components.Enums
@using Piipan.Components
@using System.Net.Http
@using Piipan.Components.Alerts
@using Piipan.Match.Api.Models
@using Piipan.QueryTool.Client.Models
@using static Piipan.Components.Forms.FormConstants
@inject NavigationManager NavigationManager


@code {
    [Parameter] public PiiRecord Query { get; set; } = new();

    /// <summary>
    /// The search response that is collected after the user hits "Search" and an API call is made
    /// </summary>
    [Parameter] public ParameterBase<OrchMatchResponseData> QueryResult { get; set; }
    [Parameter] public string Token { get; set; }
    [Parameter] public List<ServerError> ServerErrors { get; set; }

    private bool NoResults => QueryResult?.Data != null &&
        (QueryResult?.Data.Results.Count == 0 || QueryResult?.Data.Results[0].Matches.Count() == 0);
    private bool showNoResultsAlert = true;
    private bool searching = false;
    List<(string Property, string Error)> serverErrorList;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (ServerErrors?.Count > 0)
        {
            serverErrorList = new(ServerErrors.Select(n => (n.Property, n.Error)));
        }
    }
    private Task SubmitForm(bool valid)
    {
        if (valid)
        {
            searching = true;
        }
        else
        {
            showNoResultsAlert = false;
        }
        StateHasChanged();
        return Task.CompletedTask;
    }
}

<h1>Search for SNAP Participants</h1>
<p style="margin-bottom: 0;"><span class="usa-required">*</span> indicates a required field</p>
@if (NoResults && showNoResultsAlert)
{
    <UsaAlertBox Slim="true" AlertSeverity="AlertSeverity.Info">
        <p>This participant does not have a matching record in any other states.</p>
    </UsaAlertBox>
}
@if (Query != null)
{
    <UsaForm Id="snap-participants-query-form" InitialErrors="serverErrorList" Model="Query" method="post" OnBeforeSubmit="SubmitForm">
        <input type="hidden" name="__RequestVerificationToken" value="@Token" />
        <legend class="usa-sr-only">participant information</legend>
        <UsaFormGroup>
            <UsaInputText @bind-Value="Query.LastName" />
        </UsaFormGroup>
        <UsaFormGroup>
            <UsaInputDate @bind-Value="Query.DateOfBirth" />
        </UsaFormGroup>
        <UsaFormGroup>
            <HintContent>###-##-####</HintContent>
            <ChildContent>
                <UsaInputSSN @bind-Value="Query.SocialSecurityNum" Width="108" />
            </ChildContent>
        </UsaFormGroup>
        <UsaFormGroup>
            <UsaInputText @bind-Value="Query.ParticipantId" Width="118" />
        </UsaFormGroup>
        <UsaFormGroup>
            <UsaInputText @bind-Value="Query.CaseId" Width="143" />
        </UsaFormGroup>
        <button class="usa-button" type="submit" id="query-form-search-btn" disabled="@searching">@(searching ? "Searching..." : "Search")</button>
    </UsaForm>
}
@if (QueryResult?.Data?.Results?.Count > 0 && QueryResult.Data.Results[0].Matches?.Count() > 0)
{
    <QueryResults QueryResult="QueryResult.Data" />
}
else {
    <section class="border-top-1px border-base-light margin-top-6"></section>
}