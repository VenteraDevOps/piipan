@using Microsoft.AspNetCore.Components.Forms
@using Piipan.Components.Forms
@using Piipan.Components.Enums
@using Piipan.Components
@using System.Net.Http
@using Piipan.Components.Alerts
@using Piipan.Match.Api.Models
@using Piipan.QueryTool.Client.Components.UnauthorizedBanners
@using Piipan.QueryTool.Client.Models
@using Piipan.Shared.API.Enums
@using static Piipan.Components.Forms.FormConstants
@inject NavigationManager NavigationManager
@inject AppData AppData

@code {
    [Parameter] public QueryFormModel QueryFormData { get; set; } = new();

    private bool NoResults => QueryFormData.QueryResult != null &&
        (QueryFormData.QueryResult.Results.Count == 0 || QueryFormData.QueryResult.Results[0].Matches.Count() == 0);
    private bool showNoResultsAlert = true;
    private bool searching = false;
    List<(string Property, string Error)> serverErrorList;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        QueryFormData ??= new();
        if (QueryFormData.ServerErrors?.Count > 0)
        {
            serverErrorList = new(QueryFormData.ServerErrors.Select(n => (n.Property, n.Error)));
        }
    }
    private Task SubmitForm(bool valid)
    {
        if (valid)
        {
            searching = true;
        }
        else
        {
            showNoResultsAlert = false;
        }
        StateHasChanged();
        return Task.CompletedTask;
    }
}

<h1>Search for SNAP Participants</h1>
@if (!AppData.IsAuthorized)
{
    <GenericUnauthorizedBanner style="margin-bottom: 2rem;" />    
}
<div id="snap-participants-query-form-wrapper" class="@(AppData.IsAuthorized ? "" : "disabled-area")" inert="@(!AppData.IsAuthorized)">
    <p style="margin-bottom: 0;"><span class="usa-required">*</span> indicates a required field</p>
    @if (NoResults && showNoResultsAlert)
    {
        <UsaAlertBox Slim="true" AlertSeverity="AlertSeverity.Info">
            <p>This participant does not have a matching record in any other states.</p>
        </UsaAlertBox>
    }
    @if (QueryFormData.Query != null)
    {
        <UsaForm Id="snap-participants-query-form" InitialErrors="serverErrorList" Model="QueryFormData.Query" method="post" OnBeforeSubmit="SubmitForm">
            <input type="hidden" name="__RequestVerificationToken" value="@QueryFormData.Token" />
            <legend class="usa-sr-only">participant information</legend>
            <UsaFormGroup>
                <UsaInputText @bind-Value="QueryFormData.Query.LastName" />
            </UsaFormGroup>
            <UsaFormGroup>
                <UsaInputDate @bind-Value="QueryFormData.Query.DateOfBirth" />
            </UsaFormGroup>
            <UsaFormGroup>
                <HintContent>###-##-####</HintContent>
                <ChildContent>
                    <UsaInputSSN @bind-Value="QueryFormData.Query.SocialSecurityNum" />
                </ChildContent>
            </UsaFormGroup>
            <UsaFormGroup>
                <UsaInputText @bind-Value="QueryFormData.Query.ParticipantId" Width="118" maxlength="20" />
            </UsaFormGroup>
            <UsaFormGroup>
                <UsaInputText @bind-Value="QueryFormData.Query.CaseId" Width="143"  maxlength="20" />
            </UsaFormGroup>
            <UsaRadioGroup @bind-Value="QueryFormData.Query.SearchReason">
                <ChildContent>
                    @{
                        foreach (ValidSearchReasons val in  Enum.GetValues(typeof(ValidSearchReasons)))
                        {
                                <UsaRadio Value="val.ToString()">@EnumHelper.GetDisplayName(val)</UsaRadio>
                        }
                }
                </ChildContent>
            </UsaRadioGroup>
            <button class="usa-button" type="submit" id="query-form-search-btn" disabled="@(searching)">@(searching ? "Searching..." : "Search")</button>
        </UsaForm>
    }
    @if (QueryFormData.QueryResult?.Results?.Count > 0 && QueryFormData.QueryResult.Results[0].Matches?.Count() > 0)
    {
        <QueryResults QueryResult="QueryFormData.QueryResult" />
    }
    else {
        <section class="border-top-1px border-base-light margin-top-6"></section>
    }
</div>