name: Deploy

on:
  repository_dispatch:
    types: [Deploy]
  workflow_dispatch:
    # Input has to be a string, not an array/list
    # https://github.com/actions/toolkit/issues/184
    inputs:
      ENVIRONMENT:
        description: 'Deploy Environment'
        required: true
        default: 'tts/dev'
      REF:
        description: 'GitHub REF'
        required: true
        default: 'dev'
      SUBSYSTEM:
        description: 'Subsystem to Deploy (participants or shared will deploy all subsystems)'
        required: true
        default: 'shared'

env:
  NODE_VERSION: 14

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      ### Setup Action
      - name: Setup Repository Dispatch Action
        if: ${{ github.event.inputs.ENVIRONMENT == '' }}
        run: |
          echo "ENVIRONMENT=${{ github.event.client_payload.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "REF=${{ github.event.client_payload.REF }}" >> $GITHUB_ENV
          echo "SUBSYSTEM=${{ github.event.client_payload.SUBSYSTEM }}" >> $GITHUB_ENV

      - name: Setup Workflow Dispatch Action
        if: ${{ !(github.event.inputs.ENVIRONMENT == '') }}
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "REF=${{ github.event.inputs.REF }}" >> $GITHUB_ENV
          echo "SUBSYSTEM=${{ github.event.inputs.SUBSYSTEM }}" >> $GITHUB_ENV

      - name: Action Information
        run: |
          echo "Deploy Environment: ${{ env.ENVIRONMENT }}"
          echo "GitHub REF: ${{ env.REF }}"
          echo "Subsystem: ${{ env.SUBSYSTEM }}"

      ### Checkout
      - name: Default Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.REF }}

      ### Setup Deployment Tools
      - name: Use node.js ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Install Azure Functions Core Tools - 3.x
        run: npm install -g azure-functions-core-tools@3 --unsafe-perm true

      ### Configure Azure Cloud
      - name: Configure Azure Cloud
        if: contains(env.ENVIRONMENT, 'tts')
        run: echo "AZURE_CLOUD_ENVIRONMENT=AzureCloud" >> $GITHUB_ENV

      - name: Configure Azure Gov Cloud
        if: contains(env.ENVIRONMENT, 'fns')
        run: echo "AZURE_CLOUD_ENVIRONMENT=AzureUSGovernment" >> $GITHUB_ENV

      ### Configure Azure for Deployment
      - name: Configure Cloud Variables
        run: |
          path=$(echo ${{ env.ENVIRONMENT }} | sed -e 's/\//_/g')
          echo "AZURE_CREDENTIALS=AZURE_CREDENTIALS_$path" >> $GITHUB_ENV
          echo "AZURE_FILE=AZURE_FILE_$path" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets[env.AZURE_CREDENTIALS] }}'
          environment: '${{ env.AZURE_CLOUD_ENVIRONMENT }}'

      - name: Verify Azure CLI
        uses: azure/CLI@v1
        with:
          inlineScript: az account show

      ### Deployment
      - name: Configure Deployment File
        run: |
            rm -f iac/env/${{ env.ENVIRONMENT }}.bash || true
            mkdir -p iac/env/${{ env.ENVIRONMENT }} || true
            echo "${{ secrets[env.AZURE_FILE] }}" > iac/env/${{ env.ENVIRONMENT }}.bash

      # For Participants/Shared subsystems, deploy everything
      - name: Configure Deploy All
        if: ${{ env.SUBSYSTEM == 'participants' || env.SUBSYSTEM == 'shared' }}
        run: echo "DEPLOY_ALL=true" >> $GITHUB_ENV

      - name: Deploy All
        if: ${{ env.DEPLOY_ALL == 'true' }}
        run: |
          echo Deploy All Subsystems
          #./build.bash deploy -e ${{ env.ENVIRONMENT }}

      - name: Deploy Subsystem - ${{ env.SUBSYSTEM }}
        if: ${{ env.DEPLOY_ALL != 'true' }}
        run: |
          echo Deploy ${{ env.SUBSYSTEM }}
          cd ${{ env.SUBSYSTEM }}
          ./build.bash deploy -e ${{ env.ENVIRONMENT }}