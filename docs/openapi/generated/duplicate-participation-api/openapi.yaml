openapi: 3.0.0
info:
  title: Duplicate Participation API
  version: 2.0.0
  description: The API where matching will occur
servers:
  - url: /match/v2
paths:
  /find_matches:
    post:
      operationId: Find matches
      tags:
        - Match
      summary: Search for all matching participant records using de-identified data
      description: Searches all state databases for any participant records that are an exact match to the `lds_hash` of persons provided in the request.
      parameters:
        - in: header
          name: From
          schema:
            type: string
          description: 'As in the HTTP/1.1 RFC, used for logging purposes as a means for identifying the source of invalid or unwanted requests. The interpretation of this field is that the request is being performed on behalf of the state government-affiliated person whose email address (or username) is specified here. It is not used for authentication or authorization.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  minItems: 1
                  maxItems: 50
                  items:
                    type: object
                    required:
                      - lds_hash
                    properties:
                      lds_hash:
                        type: string
                        description: 'SHA-512 digest of participant''s last name, DoB, and SSN. See docs/pprl.md for details'
                        pattern: '^[0-9a-f]{128}$'
            examples:
              Single person:
                description: 'An example request to query a single person, with values for all fields'
                value:
                  data:
                    - lds_hash: eaa834c957213fbf958a5965c46fa50939299165803cd8043e7b1b0ec07882dbd5921bce7a5fb45510670b46c1bf8591bf2f3d28d329e9207b7b6d6abaca5458
              Multiple persons:
                description: A request with multiple persons
                value:
                  data:
                    - lds_hash: eaa834c957213fbf958a5965c46fa50939299165803cd8043e7b1b0ec07882dbd5921bce7a5fb45510670b46c1bf8591bf2f3d28d329e9207b7b6d6abaca5458
                    - lds_hash: 97719c32bb3c6a5e08c1241a7435d6d7047e75f40d8b3880744c07fef9d586954f77dc93279044c662d5d379e9c8a447ce03d9619ce384a7467d322e647e5d95
      responses:
        '200':
          description: Successful response. Returns match response items.
          content:
            application/json:
              schema:
                title: Match response Success
                type: object
                properties:
                  data:
                    type: object
                    nullable: true
                    description: The response payload.
                    required:
                      - results
                      - errors
                    properties:
                      results:
                        type: array
                        description: 'Array of query results. For every person provided in the request, a result is returned, even if no matches are found. If a query fails, the failure data will be in the errors array.'
                        items:
                          type: object
                          required:
                            - index
                            - matches
                          properties:
                            index:
                              type: integer
                              description: 'The index of the person that the result corresponds to, starting from 0. Index is derived from the implicit order of persons provided in the request.'
                            matches:
                              type: array
                              items:
                                type: object
                                required:
                                  - state
                                  - participant_id
                                  - case_id
                                  - match_id
                                properties:
                                  match_id:
                                    type: string
                                    description: Unique identifier for the match
                                  state:
                                    type: string
                                    description: State/territory two-letter postal abbreviation
                                  case_id:
                                    type: string
                                    description: Participant's state-specific case identifier. Can be the same for multiple participants.
                                  participant_id:
                                    type: string
                                    description: Participant's state-specific identifier. Is unique to the participant. Must not be social security number or any PII.
                                  benefits_end_month:
                                    type: string
                                    pattern: '^\d{4}-\d{2}$'
                                    example: 2021-01
                                    description: Participant's ending benefits month
                                  recent_benefit_months:
                                    type: array
                                    items:
                                      type: string
                                      pattern: '^\d{4}-\d{2}$'
                                      example: 2021-01
                                    minItems: 0
                                    maxItems: 3
                                    description: 'List of up to the last 3 months that participant received benefits, in descending order. Each month is formatted as ISO 8601 year and month. Does not include current benefit month.'
                                  protect_location:
                                    type: boolean
                                    nullable: true
                                    example: true
                                    description: Location protection flag for vulnerable individuals. True values indicate that the individualâ€™s location must be protected from disclosure to avoid harm to the individual. Apply the same protections to true and null values.
                      errors:
                        type: array
                        description: 'Array of error objects corresponding to a person in the request. If a query for a single person fails, the failure data will display here. Note that a single person in a request could have multiple error items.'
                        items:
                          type: object
                          required:
                            - index
                          properties:
                            index:
                              type: integer
                              description: 'The index of the person that the result corresponds to, starting from 0. Index is derived from the implicit order of persons provided in the request.'
                            code:
                              type: string
                              description: The application-specific error code
                            title:
                              type: string
                              description: 'The short, human-readable summary of the error, consistent across all occurrences of the error'
                            detail:
                              type: string
                              description: The human-readable explanation specific to this occurrence of the error
              examples:
                Single match:
                  description: A query for a single person returning a single match
                  value:
                    data:
                      results:
                        - index: 0
                          matches:
                            - $ref: '#/paths/~1matches~1%7Bmatch_id%7D/get/responses/200/content/application~1json/examples/success/value/data/output'
                      errors: []
                No matches:
                  description: A query for a single person returning no matches
                  value:
                    data:
                      results:
                        - index: 0
                          matches: []
                      errors: []
                Multiple matches:
                  description: A query for one person returning multiple matches
                  value:
                    data:
                      results:
                        - index: 0
                          matches:
                            - match_id: XYZ9876
                              state: eb
                              case_id: string
                              participant_id: string
                              benefits_end_month: 2021-01
                              recent_benefit_months:
                                - 2021-05
                                - 2021-04
                                - 2021-03
                              protect_location: true
                            - match_id: 4567CDF
                              state: ec
                              case_id: string
                              participant_id: string
                              benefits_end_month: null
                              protect_location: null
                      errors: []
                Multiple persons with matches:
                  description: A query for two persons returning one match for each person
                  value:
                    data:
                      results:
                        - index: 0
                          matches:
                            - $ref: '#/paths/~1find_matches/post/responses/200/content/application~1json/examples/Multiple%20matches/value/data/results/0/matches/1'
                        - index: 1
                          matches:
                            - $ref: '#/paths/~1matches~1%7Bmatch_id%7D/get/responses/200/content/application~1json/examples/success/value/data/output'
                      errors: []
                Multiple persons with one match:
                  description: A query for two persons returning no matches for one person and a match for the other
                  value:
                    data:
                      results:
                        - index: 0
                          matches: []
                        - index: 1
                          matches:
                            - $ref: '#/paths/~1find_matches/post/responses/200/content/application~1json/examples/Multiple%20matches/value/data/results/0/matches/1'
                      errors: []
                Multiple persons with errors:
                  description: A query for two persons returning a successful result for one person and an error for the other person
                  value:
                    data:
                      results:
                        - index: 1
                          matches:
                            - $ref: '#/paths/~1find_matches/post/responses/200/content/application~1json/examples/Multiple%20matches/value/data/results/0/matches/1'
                      errors:
                        - index: 0
                          code: XYZ
                          title: Internal Server Exception
                          detail: Unexpected Server Error. Please try again.
                Top-level error:
                  description: An example response for an invalid request
                  value:
                    errors:
                      - status: '400'
                        code: XYZ
                        title: Bad Request
                        detail: Request payload exceeds maxiumum count
        '400':
          description: Bad request. Request body does not match the required format.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1matches~1%7Bmatch_id%7D/get/responses/404/content/application~1json/schema'
  '/matches/{match_id}':
    get:
      operationId: Get match record
      tags:
        - Match
      summary: Get a specific match record based on Match ID
      description: 'Retrieves a specific match record based on Match ID, if exists'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                title: Match Record response - success
                type: object
                properties:
                  data:
                    type: object
                    description: 'The response payload representing a match record. Either an errors or data property will be present in the response, but not both.'
                    required:
                      - created_at
                      - match_id
                      - initiator
                      - states
                      - hash
                      - hash_type
                      - output
                      - invalid
                      - status
                    properties:
                      created_at:
                        type: string
                        format: date-time
                        example: '2021-04-12T23:20:50.52Z'
                        description: Match record's creation date/time
                      match_id:
                        type: string
                        description: Match record's human-readable unique identifier
                      initiator:
                        type: string
                        description: Match record's initiating state or territory
                      states:
                        type: array
                        description: List of states/territories involved in match
                        items:
                          type: string
                      hash:
                        type: string
                        description: Value of hash used to identify match. See docs/pprl.md for details
                      hash_type:
                        enum:
                          - ldshash
                        description: Type of hash used to identify match
                      input:
                        description: Original request data from real-time match request
                        $ref: '#/paths/~1find_matches/post/requestBody/content/application~1json/schema/properties/data/items'
                      output:
                        description: Original response data from real-time match request
                        $ref: '#/paths/~1find_matches/post/responses/200/content/application~1json/schema/properties/data/properties/results/items/properties/matches/items'
                      invalid:
                        type: boolean
                        description: Indicator used for designating match as invalid
                      status:
                        enum:
                          - open
                          - closed
                        description: Match record's status
              examples:
                success:
                  description: A match record is returned
                  value:
                    data:
                      created_at: '2021-04-12T23:20:50.52Z'
                      match_id: ABC1234
                      initiator: eb
                      states:
                        - ea
                        - eb
                      hash: a3cab51dd68da2ac3e5508c8b0ee514ada03b9f166f7035b4ac26d9c56aa7bf9d6271e44c0064337a01b558ff63fd282de14eead7e8d5a613898b700589bcdec
                      hash_type: ldshash
                      input:
                        lds_hash: a3cab51dd68da2ac3e5508c8b0ee514ada03b9f166f7035b4ac26d9c56aa7bf9d6271e44c0064337a01b558ff63fd282de14eead7e8d5a613898b700589bcdec
                      output:
                        match_id: BCD2345
                        state: ea
                        case_id: string
                        participant_id: string
                        benefits_end_month: 2021-01
                        recent_benefit_months:
                          - 2021-05
                          - 2021-04
                          - 2021-03
                        protect_location: true
                      invalid: false
                      status: open
        '404':
          description: Match not found
          content:
            application/json:
              schema:
                title: Http Errors
                type: object
                properties:
                  errors:
                    type: array
                    description: 'Holds HTTP and other top-level errors. Either an errors or data property will be present in the top-level response, but not both.'
                    items:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                          description: The HTTP status code
                        code:
                          type: string
                          description: The application-specific error code
                        title:
                          type: string
                          description: 'The short, human-readable summary of the error, consistent across all occurrences of the error'
                        detail:
                          type: string
                          description: The human-readable explanation specific to this occurrence of the error
              examples:
                not_found:
                  description: A match record is not found
                  value:
                    errors:
                      - status: '404'
                        code: XYZ
                        title: Not Found
                        detail: Match record not found
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Ocp-Apim-Subscription-Key
